% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernel_gamma.R
\name{Gamma_alt}
\alias{Gamma_alt}
\title{Gamma_alt}
\usage{
Gamma_alt(
  phi = NA,
  mu = NA,
  alpha = NA,
  beta = NA,
  sigma = NA,
  outcome,
  offset = outcome^0
)
}
\arguments{
\item{phi}{character or numeric: Name of the linear preditor associated with the shape parameter of the gamma distribuition. If numeric, this parameter is treated as knowed and equal to the value passed. If a character, the parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with alpha.}

\item{mu}{character: Name of the linear preditor associated with the mean parameter of the gamma distribuition. The parameter is treated as unknowed and equal to the exponential of the associated linear preditor.}

\item{alpha}{character: Name of the linear preditor associated with the shape parameter of the gamma distribuition. The parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with phi.}

\item{beta}{character: Name of the linear preditor associated with the rate parameter of the gamma distribuition. The parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with sigma.}

\item{sigma}{character: Name of the linear preditor associated with the scale parameter of the gamma distribuition. The parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with beta.}

\item{outcome}{vector: Values of the observed data.}

\item{offset}{vector: The offset at each observation. Must have the same shape as outcome.}
}
\value{
A object of the class dlm_distr
}
\description{
Creates an outcome with gamma distribuition with the chosen parameters (can only specify 2).
}
\examples{

# Gamma case
T <- 200
w <- (200 / 40) * 2 * pi
phi <- 2.5
data <- matrix(rgamma(T, phi, phi / (20 * (sin(w * 1:T / T) + 2))), T, 1)

level <- polynomial_block(mu = 1, D = 1 / 0.95)
season <- harmonic_block(mu = 1, period = 40, D = 1 / 0.98)
scale <- polynomial_block(phi = 1, D = 1 / 1)

# Known shape
outcome <- Gamma_alt(phi = phi, mu = "mu", outcome = data)

fitted_data <- fit_model(level, season, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

# Unknown shape
outcome <- Gamma_alt(phi = "phi", mu = "mu", outcome = data)

fitted_data <- fit_model(level, season, scale, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot
}
