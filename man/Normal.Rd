% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normal_gamma_kernel.R
\name{Normal}
\alias{Normal}
\title{Normal}
\usage{
Normal(mu, tau = NA, sigma = NA, sigma2 = NA, outcome, offset = outcome^0)
}
\arguments{
\item{mu}{character: Name of the linear preditor associated with the mean parameter of the Normal distribuition. The parameter is treated as unknowed and equal to the associated linear preditor.}

\item{tau}{character: Name of the linear preditor associated with the precision parameter of the Normal distribuition. The parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with sigma or sigma2}

\item{sigma}{character: Name of the linear preditor associated with the scale parameter of the Normal distribuition. The parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with tau or sigma2.}

\item{sigma2}{character or numeric: Name of the linear preditor associated with the variance parameter of the Normal distribuition. If numeric, this parameter is treated as knowed and equal to the value passed. If a character, the parameter is treated as unknowed and equal to the exponential of the associated linear preditor. It cannot be specified with sigma or tau.}

\item{outcome}{vector: Values of the observed data.}

\item{offset}{vector: The offset at each observation. Must have the same shape as outcome.}
}
\value{
A object of the class dlm_distr
}
\description{
Creates an outcome with Normal distribuition with the chosen parameters (can only specify 2,).
}
\examples{

# Normal case
T <- 200
mu <- rnorm(T, 0, 0.1)
data <- rnorm(T, cumsum(mu))

level <- polynomial_block(
  mu=1,
  D=1/0.95
)
variance <- polynomial_block(
  sigma2=1
)

# Known variance
outcome=Normal(mu='mu',sigma2=1,outcome=data)

fitted_data <- fit_model(level, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

# Unknown variance
outcome=Normal(mu='mu',sigma2='sigma2',outcome=data)

fitted_data <- fit_model(level,variance, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot
}
