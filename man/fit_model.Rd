% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{fit_model}
\alias{fit_model}
\title{fit_model}
\usage{
fit_model(
  ...,
  outcomes,
  pred_cred = 0.95,
  smooth_flag = TRUE,
  p_monit = NA,
  c_monit = 1
)
}
\arguments{
\item{...}{dlm_block object: The structural blocks of the model.}

\item{outcomes}{List: The observed data. It should contain objects of the class dlm_distr.}

\item{pred_cred}{Numeric: A number between 0 and 1 (not included) indicanting the credibility interval for predictions. If not within the valid range of values, predicitions are not made.}

\item{smooth_flag}{Bool: A flag indicating if the smoothed distribuition for the latent variables should be calculated.}

\item{family}{String or <undefined class>: The list of functions (or it's name) used to fit the data. Should be choosed based on the distribution of the outcomes.}

\item{offset}{Matrix: A matrix containing the offset value for the data. Dimesions should be the same as outcome.}
}
\value{
The fitted model (an object of the <undefined class> or list). Contains the values of the estimated parameter and some extra info regarding the quality of the fit.
}
\description{
Fit a model given it's structure and the observed data. This function can be used for any supported family (see vignette).
}
\examples{
library(GDLM)

# Poisson case
T <- 200
w <- (200 / 40) * 2 * pi
data <- rpois(T, 20 * (sin(w * 1:T / T) + 2))

level <- polynomial_block(rate = 1, D = 1 / 0.95)
season <- harmonic_block(rate = 1, period = 40, D = 1 / 0.98)

outcome <- Poisson(lambda = "rate", outcome = data)

fitted_data <- fit_model(level, season, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

##################################################################

# Multinomial case
T <- 200
y1 <- rpois(T, exp(5 + (-T:T / T) * 5))
y2 <- rpois(T, exp(6 + (-T:T / T) * 5 + sin((-T:T) * (2 * pi / 12))))
y3 <- rpois(T, exp(5))

y <- cbind(y1, y2, y3)

level <- polynomial_block(p1 = 1) + polynomial_block(p2 = 1)
season <- harmonic_block(p2 = 1, period = 12)
outcome <- Multinom(p = c("p1", "p2"), outcome = y)

fitted_data <- fit_model(level, season, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

##################################################################

# Normal case
T <- 200
mu <- rnorm(T, 0, 0.1)
data <- rnorm(T, cumsum(mu))

level <- polynomial_block(
  mu = 1,
  D = 1 / 0.95
)
variance <- polynomial_block(
  sigma2 = 1
)

# Known variance
outcome <- Normal(mu = "mu", sigma2 = 1, outcome = data)

fitted_data <- fit_model(level, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

# Unknown variance
outcome <- Normal(mu = "mu", sigma2 = "sigma2", outcome = data)

fitted_data <- fit_model(level, variance, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

##################################################################

# Gamma case
T <- 200
w <- (200 / 40) * 2 * pi
phi <- 2.5
data <- matrix(rgamma(T, phi, phi / (20 * (sin(w * 1:T / T) + 2))), T, 1)

level <- polynomial_block(mu = 1, D = 1 / 0.95)
season <- harmonic_block(mu = 1, period = 40, D = 1 / 0.98)
scale <- polynomial_block(phi = 1, D = 1 / 1)

# Known shape
outcome <- Gamma(phi = phi, mu = "mu", outcome = data)

fitted_data <- fit_model(level, season, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot

# Unknown shape
outcome <- Gamma(phi = "phi", mu = "mu", outcome = data)

fitted_data <- fit_model(level, season, scale, outcomes = outcome)
summary(fitted_data)

show_fit(fitted_data, smooth = TRUE)$plot
}
